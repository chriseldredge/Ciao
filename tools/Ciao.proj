<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" InitialTargets="Validate" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildThisFileDirectory)/Ciao.Defaults.props"/>
    <Import Project="$(MSBuildThisFileDirectory)/Ciao.AppVeyor.props"/>
    <Import Project="$(ProjectDirectory)/Ciao.props" Condition="Exists('$(ProjectDirectory)Ciao.props')"/>

    <PropertyGroup Label="Paths">
        <BuildDirectory Condition=" '$(BuildDirectory)' != '' ">$([System.IO.Path]::Combine('$(ProjectDirectory)', '$(BuildDirectory)'))$([System.IO.Path]::DirectorySeparatorChar)</BuildDirectory>
        <BuildDirectory Condition=" '$(BuildDirectory)' == '' ">$([System.IO.Path]::Combine('$(ProjectDirectory)', 'build'))$([System.IO.Path]::DirectorySeparatorChar)</BuildDirectory>

        <SolutionFile>$([System.IO.Path]::Combine('$(ProjectDirectory)', '$(SolutionFile)'))</SolutionFile>
        <SolutionDirectory Condition="Exists('$(SolutionFile)')">$([System.IO.Path]::GetDirectoryName('$(SolutionFile)'))$([System.IO.Path]::DirectorySeparatorChar)</SolutionDirectory>
        <SolutionPackageDirectory Condition="Exists('$(SolutionDirectory)')">$([System.IO.Path]::Combine('$(SolutionDirectory)', 'packages'))$([System.IO.Path]::DirectorySeparatorChar)</SolutionPackageDirectory>

        <ToolsDirectory Condition=" '$(ToolsDirectory)' != '' ">$([System.IO.Path]::Combine('$(ProjectDirectory)', '$(ToolsDirectory)'))$([System.IO.Path]::DirectorySeparatorChar)</ToolsDirectory>
        <ToolsDirectory Condition=" '$(ToolsDirectory)' == '' ">$([System.IO.Path]::Combine('$(BuildDirectory)', 'tools'))$([System.IO.Path]::DirectorySeparatorChar)</ToolsDirectory>
        <NuGetExePath Condition=" '$(NuGetExePath)' == '' ">$([System.IO.Path]::Combine('$(ToolsDirectory)', 'NuGet.exe'))</NuGetExePath>

        <NuGetCommand Condition=" '$(OS)' == 'Windows_NT' ">"$(NuGetExePath)"</NuGetCommand>
        <NuGetCommand Condition=" '$(OS)' != 'Windows_NT' ">mono --runtime=v4.0.30319 $(NuGetExePath)</NuGetCommand>
        <NuGetClientDownloadUrl Condition=" '$(NuGetClientDownloadUrl)' == ''">https://www.nuget.org/nuget.exe</NuGetClientDownloadUrl>
    </PropertyGroup>

    <PropertyGroup>
        <PackageVersion>$(VersionPrefix)</PackageVersion>
        <PackageVersion Condition=" '$(VersionSuffix)' != '' ">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
        <BuildNumber Condition=" '$(BuildNumber)' == '' ">0</BuildNumber>
        <PackageVersionWithBuildNumber>$(PackageVersion)-build$(BuildNumber)</PackageVersionWithBuildNumber>
    </PropertyGroup>

    <PropertyGroup>
        <BuildDependsOn>
            Compile;
            Test;
            Package
        </BuildDependsOn>
        <CleanDependsOn>
            CompileClean
        </CleanDependsOn>
        <TestDependsOn/>
        <PackageDependsOn/>
        <CompileDependsOn>
            ResolveCompileTargets;
            ResolveCompileConfigurations;
            CompileTargets
        </CompileDependsOn>
    </PropertyGroup>

    <Target Name="Clean" DependsOnTargets="$(CleanDependsOn)"/>
    <Target Name="Build" DependsOnTargets="$(BuildDependsOn)"/>
    <Target Name="Test" DependsOnTargets="$(TestDependsOn)"/>
    <Target Name="Package" DependsOnTargets="$(PackageDependsOn)"/>
    <Target Name="Rebuild" DependsOnTargets="Clean;Build"/>

    <Import Project="$(MSBuildThisFileDirectory)Ciao.VersionInfo.targets" Condition=" '$(GenerateVersionInfoEnabled)' == 'true' "/>
    <Import Project="$(MSBuildThisFileDirectory)Ciao.Test.NUnit.targets" Condition=" '$(NUnitEnabled)' == 'true' "/>
    <Import Project="$(MSBuildThisFileDirectory)Ciao.Package.NuGet.targets" Condition=" '$(NuGetPackEnabled)' == 'true' "/>

    <Target Name="Validate" DependsOnTargets="ResolveCompileConfigurations">
        <Error Text="The project $(MSBuildThisFile) must be invoked with the property ProjectDirectory defined" Condition=" '$(ProjectDirectory)' == '' "/>
        <Error Text="$(ProjectDirectory)IntegratedBuild.props must define the SolutionFile property" Condition=" '$(SolutionFile)' == '' "/>
        <Error Text="The Solution $(SolutionFile) does not exist" Condition="!Exists('$(SolutionFile)')"/>
    </Target>

    <Target Name="Compile" DependsOnTargets="BeforeCompile;$(CompileDependsOn);AfterCompile"/>
    <Target Name="BeforeCompile"/>
    <Target Name="AfterCompile"/>

    <Target Name="ResolveCompileTargets" Condition=" '@(CiaoCompileTarget)' == '' ">
        <ItemGroup>
            <CiaoCompileTarget Include="$(SolutionFile)"/>
        </ItemGroup>
    </Target>

    <Target Name="ResolveCompileConfigurations">
        <ItemGroup Condition=" '@(CiaoBuildConfiguration)' == '' ">
            <CiaoBuildConfiguration Include="$(Configuration)" Condition=" '$(Configuration)' != '' "/>
            <CiaoBuildConfiguration Include="Debug;Release" Condition=" '$(Configuration)' == '' "/>
        </ItemGroup>
    </Target>

    <Target Name="CompileTargets">
        <MSBuild Projects="@(CiaoCompileTarget)" Targets="Build" Properties="Configuration=%(CiaoBuildConfiguration.Identity)"/>
    </Target>

    <Target Name="CompileClean">
        <MSBuild Projects="$(SolutionFile)" Targets="Clean" Properties="Configuration=%(CiaoBuildConfiguration.Identity)" />
    </Target>

    <Import Project="$(ProjectDirectory)/Ciao.targets" Condition="Exists('$(ProjectDirectory)/Ciao.targets')"/>
</Project>
